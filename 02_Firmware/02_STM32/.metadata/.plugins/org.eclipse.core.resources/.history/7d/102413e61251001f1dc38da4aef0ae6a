/*
 * esp32i2sComunicationDriver.cpp
 *
 *  Created on: Aug 2, 2024
 *      Author: dbank
 */

#include "esp32i2sComunicationDriver.h"

esp32_i2sComunicationDriver::esp32_i2sComunicationDriver(i2cMaster* pointer_to_i2cMasterObject) {
	// TODO Auto-generated constructor stub
		this->pi2cMaster = pointer_to_i2cMasterObject;
		configASSERT(this->esp32IntrrruptRequest_CountingSemaphore = xSemaphoreCreateCounting(this->esp32InterruptRequestCountingSemaphore_MAX, 0));
}





HAL_StatusTypeDef esp32_i2sComunicationDriver::ping(void){
	return this->pi2cMaster->ping(this->esp32i2cSlaveAdress);
}

void esp32_i2sComunicationDriver::incrementInterruptRequestCountingSemaphore(void){
	BaseType_t xHigherPriorityTaskWoken = pdFALSE;
	xSemaphoreGiveFromISR(this->esp32IntrrruptRequest_CountingSemaphore, &xHigherPriorityTaskWoken);
	portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
}

void esp32_i2sComunicationDriver::intrrruptRequestCallback(void *pNothing){
	i2cFrame_transmitQueue tempI2CFrameReceivedFromESP32;
	tempI2CFrameReceivedFromESP32.slaveDevice7bitAddress = this->esp32i2cSlaveAdress;
	char* pdymanicDataPointer;
	while(1){
		printf("111\r\n");
		vTaskDelay(5000);
	}
}


esp32_i2sComunicationDriver::~esp32_i2sComunicationDriver() {
	// TODO Auto-generated destructor stub
	#warning zrobic porzadny destruktor
}

