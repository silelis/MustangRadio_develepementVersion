/*
 * radioMenu.h
 *
 *  Created on: Aug 11, 2024
 *      Author: dbank
 */

#ifndef INC_RADIOMENU_H_
#define INC_RADIOMENU_H_

#include <stdio.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdbool.h>
#include <list>

class menuItem{
public:
	//http://www.embeddeddev.pl/menu-na-lcd-wprowadzenie/
	menuItem(const char* tag);
	~menuItem();
	void print();

	struct menuNavigation{
		uint8_t menuNumber;
		menuItem* next=NULL;		//adres menu wcześniejszego (<<<---)
		menuItem* prev=NULL;		//adres menu kolejneno (--->>>)

		//menu_t* parent=NULL;	//adres menu piętro wyżej (w liście rozwijanej ↑↑↑↑↑↑)
		//menu_t* child=NULL;		//adres menu piętro niżej (w liście rozwijanej ↓↓↓↓↓↓)
	};

protected:

private:
	const char* TAG;
	uint8_t menuNumber;
};



/*
typedef struct{

	char* menuName;
	uint8_t menuNumber;

	//led1 color prim
	//led1 color sec

	//led2 color prim
	//led2 color sec

	//led3 color prim
	//led3 color sec

	struct {
	void (*sButV)(void*); // ogólny wskaźnik do funkcji zktóra bedzie wywołana po krótkim wciśnięciu Volume
	void (*sBut1)(void*); // ogólny wskaźnik do funkcji zktóra bedzie wywołana po krótkim wciśnięciu BUT1
	void (*sBut2)(void*); // ogólny wskaźnik do funkcji zktóra bedzie wywołana po krótkim wciśnięciu BUT1
	void (*sBut3)(void*); // ogólny wskaźnik do funkcji zktóra bedzie wywołana po krótkim wciśnięciu BUT1
	void (*sBut4)(void*); // ogólny wskaźnik do funkcji zktóra bedzie wywołana po krótkim wciśnięciu BUT1
	void (*sBut5)(void*); // ogólny wskaźnik do funkcji zktóra bedzie wywołana po krótkim wciśnięciu BUT1
	void (*sButE)(void*); // ogólny wskaźnik do funkcji zktóra bedzie wywołana po krótkim wciśnięciu Equaliser

	void (*lButV)(void*); // ogólny wskaźnik do funkcji zktóra bedzie wywołana po długim wciśnięciu Volume
	void (*lBut1)(void*); // ogólny wskaźnik do funkcji zktóra bedzie wywołana po długim wciśnięciu BUT1
	void (*lBut2)(void*); // ogólny wskaźnik do funkcji zktóra bedzie wywołana po długim wciśnięciu BUT1
	void (*lBut3)(void*); // ogólny wskaźnik do funkcji zktóra bedzie wywołana po długim wciśnięciu BUT1
	void (*lBut4)(void*); // ogólny wskaźnik do funkcji zktóra bedzie wywołana po długim wciśnięciu BUT1
	void (*lBut5)(void*); // ogólny wskaźnik do funkcji zktóra bedzie wywołana po długim wciśnięciu BUT1
	void (*lButE)(void*); // ogólny wskaźnik do funkcji zktóra bedzie wywołana po długim wciśnięciu Equaliser

	void (*rotV_CW)(void*); // ogólny wskaźnik do funkcji zktóra bedzie wywołana po przekręcenie rotary enkodera Volume w kierunki wskazówek zegara
	void (*rotV_CCW)(void*); // ogólny wskaźnik do funkcji zktóra bedzie wywołana po przekręcenie rotary enkodera Volume w kierunki pezewciwnym do wskazówek zegara
	void (*rotE_CW)(void*); // ogólny wskaźnik do funkcji zktóra bedzie wywołana po przekręcenie rotary enkodera Equaliser w kierunki wskazówek zegara
	void (*rotE_CCW)(void*); // ogólny wskaźnik do funkcji zktóra bedzie wywołana po przekręcenie rotary enkodera Equaliser w kierunki przeciwnym do wskazówek zegara
	}execute;

}menu_t;*/






class radioMenus {
public:
	radioMenus();
	virtual ~radioMenus();

	bool menuAppend(menuItem menu);



protected:

private:
	const char *TAG = "Menu log: ";

	std::list<menuItem> audioDev;

};

#endif /* INC_RADIOMENU_H_ */
