/*
 * menuItem.h
 *
 *  Created on: Aug 11, 2024
 *      Author: dbank
 */

#ifndef SRC_SILELIS_CODE_MENUITEM_H_
#define SRC_SILELIS_CODE_MENUITEM_H_

#include <stdio.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdbool.h>
#include "comunicationStructures.h"
#include <string.h>
#include <iostream>
#include <functional>
#include "SileliS_code/myPrintfTask.h"
#include "SileliS_code/keyboardToFunction.h"


struct execute_t{
	keyboardUnion buttonSequence;		//kod klawisza wywołujący funkcję
	std::function<void()> functionPointer;		//wskaźnik do funkcji jaka ma być wywołana
};


class menuItem{
public:
	//http://www.embeddeddev.pl/menu-na-lcd-wprowadzenie/
	menuItem(const char* tag, _execute_t *ExecutableButtonsArray);
	~menuItem();

	void	mI_appendInit(std::function<void()> newFunc);
	void	mI_executeInit(void);
	void	mI_appendDeInit(std::function<void()> newFunc);
	void	mI_executeDeInit(void);

	void	mi_bindInit(void (*new_init)(void*));
	void	mi_bindDeInit(void (*new_init)(void*));
	void	mi_bindBackInit(void (*new_init)(void*));
	void 	mi_execInit(void*);

protected:
	const char*	mI_TAG;

private:
	std::function<void()> Init;
	std::function<void()> deInit;
	void (*cInit)(void*) = nullptr;
	void (*cBackInit)(void*)= nullptr;
	void (*cDeInit)(void*)= nullptr;

	void mi_bindFunction(void (**target)(void*), void (*new_func)(void*));
	_execute_t	*pExecutableButtonsArray;		//pointer to executable button arrayi in radioMeny class



	void	appendFunctionPointer(std::function<void()>* funcPtr, std::function<void()> newFunc);
	void	executeFunctionPointer(std::function<void()>* funcPtr);


};

#endif /* SRC_SILELIS_CODE_MENUITEM_H_ */
