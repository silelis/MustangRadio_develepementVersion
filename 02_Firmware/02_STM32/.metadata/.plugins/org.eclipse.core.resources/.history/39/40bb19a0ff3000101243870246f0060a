/*
 * ledsController.cpp
 *
 *  Created on: May 14, 2025
 *      Author: dbank
 */

#include "SileliS_code/ledsController.h"


enum ledsController::ledEnum{
	sourceLed,
	equaliserLed,
	errorLed,
	backlightLeds
};

ledsController::ledsController(hmiLeds* leds) {
	// TODO Auto-generated constructor stub
	this->pLeds = leds;
}

void ledsController::setLedColors(ledEnum whichLed, ws2812Color primary, ws2812Color secondary){
	colorSet*pSetLed;
	switch (whichLed) {
	        case sourceLed:
	        	pSetLed=&this->pLeds->sourceLed;
	            break;
	        case equaliserLed:
	        	pSetLed=&this->pLeds->equaliserLed;
	        	break;
	        case errorLed:
	        	pSetLed=&this->pLeds->errorLed;
	            break;
	        case backlightLeds:
	        	pSetLed=&this->pLeds->backlightLeds;
	            break;
	    }
	pSetLed->primary=primary;
	pSetLed->secondary=secondary;
}

void ledsController::setLedBlinking(ledEnum whichLed, ws2812Color primary, ws2812Color secondary){
	this->setLedColors(whichLed, primary, secondary);
}

void ledsController::setLedColor(ledEnum whichLed, ws2812Color color){
	this->setLedColors(whichLed, color, color);
}

ledsController::~ledsController() {
	// TODO Auto-generated destructor stub
}

