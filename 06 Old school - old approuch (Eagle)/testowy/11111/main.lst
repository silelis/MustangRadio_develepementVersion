CCS PCM C Compiler, Version 5.046, 5967               07-lip-17 13:08

               Filename:   F:\Elektronika_projekty\Car_Radio\testowy\11111\main.lst

               ROM used:   120 words (1%)
                           Largest free fragment is 2048
               RAM used:   14 (4%) at main() level
                           15 (4%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   05F
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.5
0018:  GOTO   01B
0019:  BTFSC  0B.2
001A:  GOTO   02C
001B:  MOVF   22,W
001C:  MOVWF  04
001D:  MOVF   23,W
001E:  MOVWF  77
001F:  MOVF   24,W
0020:  MOVWF  78
0021:  MOVF   25,W
0022:  MOVWF  79
0023:  MOVF   26,W
0024:  MOVWF  7A
0025:  MOVF   20,W
0026:  MOVWF  0A
0027:  SWAPF  21,W
0028:  MOVWF  03
0029:  SWAPF  7F,F
002A:  SWAPF  7F,W
002B:  RETFIE
002C:  BCF    0A.3
002D:  BCF    0A.4
002E:  GOTO   02F
.................... #include <main.h> 
.................... #include <16F877.h> 
.................... //////////// Standard Header file for the PIC16F877 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877 
....................  
.................... #list 
....................  
.................... #device ADC=10 
.................... #use delay(crystal=20000000) 
*
0041:  MOVLW  29
0042:  MOVWF  04
0043:  BCF    03.7
0044:  MOVF   00,W
0045:  BTFSC  03.2
0046:  GOTO   054
0047:  MOVLW  06
0048:  MOVWF  78
0049:  CLRF   77
004A:  DECFSZ 77,F
004B:  GOTO   04A
004C:  DECFSZ 78,F
004D:  GOTO   049
004E:  MOVLW  7B
004F:  MOVWF  77
0050:  DECFSZ 77,F
0051:  GOTO   050
0052:  DECFSZ 00,F
0053:  GOTO   047
....................  
....................  
....................  
....................  
.................... int16 timer_counter =0; 
....................  
.................... #INT_TIMER0 
.................... void  TIMER0_isr(void)  
.................... { 
....................       timer_counter = timer_counter +1; 
*
002F:  MOVLW  01
0030:  ADDWF  27,F
0031:  BTFSC  03.0
0032:  INCF   28,F
....................        
....................       if (timer_counter> 15) 
0033:  MOVF   28,F
0034:  BTFSS  03.2
0035:  GOTO   03A
0036:  MOVF   27,W
0037:  SUBLW  0F
0038:  BTFSC  03.0
0039:  GOTO   05B
....................       { 
....................         disable_interrupts(INT_TIMER0); 
003A:  BCF    0B.5
....................         //timer_counter=0; 
....................         output_high(pin_a0); 
003B:  BSF    03.5
003C:  BCF    05.0
003D:  BCF    03.5
003E:  BSF    05.0
....................         delay_ms(250); 
003F:  MOVLW  FA
0040:  MOVWF  29
....................         output_low(pin_a0); 
*
0054:  BSF    03.5
0055:  BCF    05.0
0056:  BCF    03.5
0057:  BCF    05.0
....................         timer_counter=0; 
0058:  CLRF   28
0059:  CLRF   27
....................         enable_interrupts(INT_TIMER0); 
005A:  BSF    0B.5
....................       } 
005B:  BCF    0B.2
005C:  BCF    0A.3
005D:  BCF    0A.4
005E:  GOTO   01B
.................... } 
....................  
.................... void main() 
005F:  MOVF   03,W
0060:  ANDLW  1F
0061:  MOVWF  03
0062:  CLRF   28
0063:  CLRF   27
0064:  BSF    03.5
0065:  BSF    1F.0
0066:  BSF    1F.1
0067:  BSF    1F.2
0068:  BCF    1F.3
0069:  BCF    03.7
.................... { 
....................    //setup_timer_0(RTCC_INTERNAL|RTCC_DIV_1|RTCC_8_bit);      //51,2 us overflow 
....................    //setup_timer_0(RTCC_INTERNAL|RTCC_DIV_2|RTCC_8_bit);      //102 us overflow 
....................    //setup_timer_0(RTCC_INTERNAL|RTCC_DIV_4|RTCC_8_bit);      //204 us overflow 
....................    //setup_timer_0(RTCC_INTERNAL|RTCC_DIV_8|RTCC_8_bit);      //409 us overflow 
....................    //setup_timer_0(RTCC_INTERNAL|RTCC_DIV_16|RTCC_8_bit);      //819 us overflow 
....................    //setup_timer_0(RTCC_INTERNAL|RTCC_DIV_32|RTCC_8_bit);      //1,6 ms overflow 
....................    //setup_timer_0(RTCC_INTERNAL|RTCC_DIV_64|RTCC_8_bit);      //3,2 ms overflow 
....................   setup_timer_0(RTCC_INTERNAL|RTCC_DIV_128|RTCC_8_bit);      //6,5 ms overflow 
006A:  MOVF   01,W
006B:  ANDLW  C0
006C:  IORLW  06
006D:  MOVWF  01
....................    //setup_timer_0(RTCC_INTERNAL|RTCC_DIV_256|RTCC_8_bit);      //13,1 ms overflow 
....................  
....................  
....................  
....................    enable_interrupts(INT_TIMER0); 
006E:  BCF    03.5
006F:  BSF    0B.5
....................    enable_interrupts(GLOBAL); 
0070:  MOVLW  C0
0071:  IORWF  0B,F
....................  
....................    while(TRUE) 
....................    { 
....................       //TODO: User Code 
....................       output_low(pin_a0); 
0072:  BSF    03.5
0073:  BCF    05.0
0074:  BCF    03.5
0075:  BCF    05.0
0076:  GOTO   072
....................    } 
....................  
.................... } 
0077:  SLEEP

Configuration Fuses:
   Word  1: 3B72   HS NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
